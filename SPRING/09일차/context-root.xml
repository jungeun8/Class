<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:annotation-config/>
	<!-- 
		com.sample.service패키지의 모든 ServiceImpl 객체를 스프링의 빈으로 시킨다. 
	 -->
	<context:component-scan base-package="com.sample.service"/>
	
	<!-- 
		라이브러를 이요한 커넥션풀을 스프링의 빈으로 등록한다. 
	 -->
	<bean id="dataSource" 
		class="org.apache.commons.dbcp2.BasicDataSource"
		p:driverClassName="oracle.jdbc.OracleDriver"
		p:url="jdbc:oracle:thin:@eundb_high?TNS_ADMIN=/Users/jungeun-kim/Wallet_eunDB"
		p:username="HR"
		p:password="zxcv1234ZXCV1"/>
	<!-- 
		선언적 트랜젝션 처리를 지원하는 트랜잭션 매니저를 스프링 컨티이너의 빈으로 등록한다.
	 -->
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource"/>

<!-- 
		@transaction 어노테이션이 지정된 인터페이스/클래스/메소드에 선언적 트랜젝션처리를 지원하는 빈들이 스프링컨테이너의 빈으로 등록된다.
 -->
	<tx:annotation-driven transaction-manager="Manager"/>
	<!-- 
			mybatis의 핵심객체인 sqlSessionFactory 객체를 스프링 컨테이너의 빈으로 등록시킨다.
			커넥션풀 객체, mybatis설정파일, mybatis 매퍼파일 정보를 의존성 주입해야한다.
	 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource"
		p:configLocation="classpath:/mybatis/mybatis-config.xml"
		p:mapperLocations="classpath:/mybatis/mappers/*.xml"/>
	<!-- 
		지정된 패키지 mybaits용 mapper 인터페이스(ProductDao, UserDao, OrderDao, ReviewDao, cartDao 등)을 스캔해서 
		Mapper 인터페이스 구현객체를 생성하고, 스프링 컨테이너의 빈으로 등록한다. 
	 -->
	<mybatis-spring:scan 
		base-package="com.sample.dao"
		factory-ref="sqlSessionFactory"/>

</beans>
